name: CI-Sonarcloud-AzurePipeline

# Run this workflow every time a commit gets pushed to main or a pull request gets opened against main
on:
  # push:
  #   branches:
  #     - main
  pull_request:
    branches: 
      - master

jobs:
  check-application:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Ls pwd
        run: |
          ls /home/runner/work/azure-github/azure-github

      - name: Ls folder
        run: |
          ls
    # - uses: actions/checkout@v2

      - run: |
          mkdir -p artifacts/store
          cp docs.md artifacts/store/docs.md
          ls artifacts/store
          cat artifacts/store/docs.md
          cd artifacts/store
          pwd

    # - run: echo hello > path/to/artifact/world.txt

    # - uses: actions/upload-artifact@v3
    #   with:
    #     name: my-artifact
    #     path: path/to/artifact/world.txt

    # - run: path/to/artifact ls 

      # - uses: actions/checkout@v2

      # - name: Build the stack
      #   run: docker-compose up -d --build
          
      # - name: Test app
      #   run: |
      #     docker run azure-github_nodeapp npm test
      #     docker exec nodeapp ls
      
      # - run: mkdir -p artifacts/

      # - name: Get coverage info
      #   run: |
      #     docker exec nodeapp ls
      #     docker cp nodeapp:/usr/src/app/coverage/lcov.info artifacts/
      
      # - name: List artifacts
      #   run: |
      #     ls artifacts/
      #     cat artifacts/lcov.info

      # - name: List artifacts 2
      #   run: ls artifacts/coverage/coverage

  # verify_code:
  #   name: Verify code security and beauty.
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

  #     - name: SonarCloud Scan
  #       uses: SonarSource/sonarcloud-github-action@master
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #       with:
  #         projectBaseDir: .


  # build:
  #   name: Call Azure Pipeline
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Azure Pipelines Action
  #     uses: Azure/pipelines@v1
  #     with:
  #       # Not use trailing slash.
  #       azure-devops-project-url: https://dev.azure.com/show0804/azure-github
  #       azure-pipeline-name: 'IgorCSilva.azure-github'
  #       azure-devops-token: ${{ secrets.AZURE_DEVOPS_TOKEN }}
